type Character {
  id: ID
  name: String!
  bag: Bag
  weaponLevel: Int
  armourLevel: Int
  lastRewardDate: Int
  seedReadyDate: Int
  megaSeedReadyDate: Int
  legendarySeedReadyDate: Int
  rankBeaten: Int
  questNumber: String
}

type Bag {
  money: Int
  apples: Int
  seeds: Int
}

type Query {
  character(id: ID!): Character
  characters: [Character]
}

type Mutation {
  createCharacter(name: String!): Character
  collectReward(id: ID): ActionResult
  completeQuest(id: ID): ActionResult
}

type ActionResult {
  message: String
  character: Character
}
